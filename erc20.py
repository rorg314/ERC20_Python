



class ERC20Token():
    def __init__(self, name, symbol, decimals=18, quanta='_wei', totalSupply=0, addressFormat='integer'):
        # Token name
        self.name = name
        # Token symbol
        self.symbol = symbol
        
        # Total token supply
        self.totalSupply = totalSupply

        # --------- QUANTA --------- #
        # Defines token quanta (smallest individual unit - e.g satoshis or wei)

        # Token quanta name
        self.quanta = quanta
        # Number of token decimals 
        self.decimals = decimals


        # -------- ADDRESSES ------- #
        # Address format specifier: 
        # Eg: integer => addresses specified by incremental integers 
        self.addressFormat = addressFormat
        
        # List of all addresses
        self.allAddresses = list()


    # ======================================================== #
    # ===================== TOKEN METHODS ==================== #
    # ======================================================== #

    # --- QUANTA CONVERSIONS --- #

    # Convert a symbol amount into quanta (eg 1BTC = 100,000,000 Satoshi) 
    def GetQuantisedAmount(self, symbolAmount):
        return symbolAmount * (10**self.decimals)
    
    # Convert quanta amount to symbol amount (eg 1 Satoshi = 0.00000001 BTC)
    def GetSymbolAmount(self, quantaAmount):
        return quantaAmount * 10 ** (-self.decimals)

    


class Address():
    def __init__(self, token:ERC20Token, address=None, balance=0):
        # Token held at this address
        self.token = token
        # Address (if None this will be autogenerated)


        # Token balance of this address
        self.balance = balance
